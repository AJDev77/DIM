name: Deploy Prod

on:
  workflow_dispatch:
    inputs:
      patch:
        description: 'Should this be a patch release?'
        required: true
        default: 'true'
  schedule:
    # Deploy at 5pm Sunday PST, which is 1am Monday UTC
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 1 * * 1'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2 # So sentry can get the previous commit
          # Use the dim-release-bot token rather than the default
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: dim.rsa
          known_hosts: ${{ secrets.REMOTE_HOST }}

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.1.0

      - name: set feature
        if: ${{ !github.event.inputs.patch }}
        run: |
          echo "build_level='feature'" >> $GITHUB_ENV

      - name: set bug
        if: ${{ github.event.inputs.patch }}
        run: |
          echo "build_level='bug'" >> $GITHUB_ENV

      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.package-version.outputs.current-version }}
          version-fragment: ${{ env.build_level }}

      - name: set version
        run: |
          echo "VERSION=${{ steps.bump_version.outputs.next-version }}" >> $GITHUB_ENV

      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Build and deploy
        run: ./build/deploy-prod.sh
        env:
          WEB_API_KEY: ${{ secrets.PROD_API_KEY }}
          WEB_OAUTH_CLIENT_ID: ${{ secrets.PROD_OAUTH_CLIENT_ID }}
          WEB_OAUTH_CLIENT_SECRET: ${{ secrets.PROD_OAUTH_CLIENT_SECRET }}
          DIM_API_KEY: ${{ secrets.PROD_DIM_API_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: app.destinyitemmanager.com
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          # Use the dim-release-bot token rather than the default
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Purge CloudFlare cache
        run: ./build/purge-cloudflare.sh
        env:
          CLOUDFLARE_KEY: ${{ secrets.CLOUDFLARE_KEY }}
          CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
          APP_DOMAIN: app.destinyitemmanager.com

      - name: Publish Sentry release
        run: ./build/sentry-release.sh
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
